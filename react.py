# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Aug 25 20:19:51 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))